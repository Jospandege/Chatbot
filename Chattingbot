package com.infoworld;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import org.json.JSONException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class App {
    private static final Logger LOGGER = LoggerFactory.getLogger(App.class);
    private static final String OPENAI_API_KEY = "YOUR_API_KEY"; // Replace with your actual OpenAI API key
    private static final String OPENAI_API_ENDPOINT = "https://api.openai.com/v1/engines/davinci/completions"; // Updated endpoint for the "davinci" model

    public static String sendQuery(String message) throws IOException {
        OkHttpClient client = new OkHttpClient();
        MediaType mediaType = MediaType.parse("application/json; charset=utf-8");

        // Create a JSON request body with the user's message
        String requestBodyJson = "{\"prompt\":\"" + message + "\",\"max_tokens\":50}"; // You can adjust "max_tokens" as needed

        RequestBody requestBody = RequestBody.create(mediaType, requestBodyJson);
        Request request = new Request.Builder()
                .url(OPENAI_API_ENDPOINT)
                .post(requestBody)
                .addHeader("Content-Type", "application/json")
                .addHeader("Authorization", "Bearer " + OPENAI_API_KEY)
                .build();

        Response response = client.newCall(request).execute();
        return response.body().string();
    }

    public static void main(String[] args) {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            System.out.print("Enter your message: ");
            String input = reader.readLine();
            String response = sendQuery(input);
            LOGGER.info("Response: {}", response);
        } catch (IOException e) {
            LOGGER.error("Error reading input: {}", e.getMessage());
        } catch (Exception e) {
            LOGGER.error("Unexpected error: {}", e.getMessage());
        }
    }
}
